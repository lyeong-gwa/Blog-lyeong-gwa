#version: 버전 예시 ->'3.3'
version: '3.3'
services:

  #로드밸런싱용으로 적용 -> docker-compose scale도 있지만 spring port 문제
  nginx:
    platform: linux/amd64
    image: nginx:1.21.5-alpine
    ports:
      - 8000:8000
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    container_name: nginx
    external_links:
      - backend1
      - backend2
      - backend3
    depends_on:
      - backend1
      - backend2
      - backend3
    networks:
      - blog

  db:
    platform: linux/amd64
    build: ./MYSQL
    #restart: always
    container_name: db_mysql
    environment:
      - TZ=Asia/Seoul
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_USER=${DB_USER_ID}
      - MYSQL_PASSWORD=${DB_USER_PASSWORD}
      #- MYSQL_ALLOW_EMPTY_PASSWORD=true
    ports:
      # 로컬:컨테이너
      - '3333:3306'
    volumes:
      - ./MYSQL/mysql-init-files/:/docker-entrypoint-initdb.d/
      - ./res/data/:/var/lib/mysql
    networks:
      - blog

  frontend:
    platform: linux/amd64
    build: ./frontend
    volumes:
      - ./frontend:/srv/docker-server
    #restart: always
    container_name: frontend_vue
    environment:
      - TZ=Asia/Seoul
      - VUE_APP_CORE_API_URL=${VUE_APP_CORE_API_URL}
    ports:
      - '80:80'
    networks:
      - blog
  
  # 도커 동작 순서 이해할 필요가 있어보임
  # build할 때 Dockerfile을 처리하는데 volumes은 아래에 위치 mvn package로 스프링 프로젝트 접근x
  backend1:
    platform: linux/amd64
    build: ./backend
    container_name: backend_spring1
    #restart: always
    volumes:
      - ./backend:/srv/docker-server
      - ./res/utilImage:/utilImage
    environment:
      - TZ=Asia/Seoul
      - MYSQL_USER=${DB_USER_ID}
      - MYSQL_PASSWORD=${DB_USER_PASSWORD}
      - URL=${URL}
    ports:
      - "8001:8001"
    networks:
      - blog 
  
  backend2:
    platform: linux/amd64
    build: ./backend
    container_name: backend_spring2
    #restart: always
    volumes:
      - ./backend:/srv/docker-server
      - ./res/utilImage:/utilImage
    environment:
      - TZ=Asia/Seoul
      - MYSQL_USER=${DB_USER_ID}
      - MYSQL_PASSWORD=${DB_USER_PASSWORD}
      - URL=${URL}
    ports:
      - "8002:8001"
    networks:
      - blog 
  
  backend3:
    platform: linux/amd64
    build: ./backend
    container_name: backend_spring3
    #restart: always
    volumes:
      - ./backend:/srv/docker-server
      - ./res/utilImage:/utilImage
    environment:
      - TZ=Asia/Seoul
      - MYSQL_USER=${DB_USER_ID}
      - MYSQL_PASSWORD=${DB_USER_PASSWORD}
      - URL=${URL}
    ports:
      - "8003:8001"
    networks:
      - blog 

networks:
  blog:
    driver: bridge
    